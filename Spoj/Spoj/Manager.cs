using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Spoj
{
    class Manager
    {
        public static void StartService()
        {
           Calculations.CalculateX("36 * X - - 5 + 8 1 - - * 5 1 7 6");
           Calculations.CalculateX("236 * + * X + 9 6 + - - 3 5 2 2 2");
           Calculations.CalculateX("96 * + 2 + X 4 + 9 - 5 6");
           Calculations.CalculateX("10 - + - 7 + 3 1 * + 5 5 X * 3 + 5 9");
           Calculations.CalculateX("30 + + * 4 5 + 1 9 - 6 X");
           Calculations.CalculateX("-17 - + 1 + X + 5 7 * 6 6");
           Calculations.CalculateX("-5 + - 2 X - 6 + - 7 1 + - - 1 9 1 8");
           Calculations.CalculateX("-4176 * - X * * 4 8 3 * 1 * 8 6");
           Calculations.CalculateX("48 + - * 6 5 - X 5 * 4 3");
           Calculations.CalculateX("339 + 9 * + 9 X + + 7 3 8");
           Calculations.CalculateX("906 - * - * 9 8 + 5 7 + 7 + 4 4 - + 3 6 X");
           Calculations.CalculateX("2511 * + 4 + 6 * 7 3 * + 7 * 5 4 X");
           Calculations.CalculateX("38 + - - * 8 X 4 8 * 1 2");
           Calculations.CalculateX("640 * + * 7 9 X - - + 8 8 5 1");
           Calculations.CalculateX("-24 + X * - 7 + 7 4 + 2 * 8 - + 3 + 2 4 8");
           Calculations.CalculateX("-82 - * * X * 5 - 6 + 9 2 3 7");
           Calculations.CalculateX("43 + + 3 * 5 9 + - X + 9 1 4");
           Calculations.CalculateX("-122 + + X * 2 6 + - * 5 2 * + * 4 8 5 4 2");
           Calculations.CalculateX("34 * * + 6 + 1 4 + + 1 5 - 4 9 - 5 X");
           Calculations.CalculateX("-69 + - + - * * 2 - 5 7 8 * 6 7 4 7 X");
           Calculations.CalculateX("112 - - + + 9 * 9 + 7 5 - 8 4 1 + 9 X");
           Calculations.CalculateX("-33 - - * - - X 1 8 + 2 9 5 - 4 - 3 5");
           Calculations.CalculateX("246 * + * * 3 6 - 9 2 - 3 6 X");
           Calculations.CalculateX("-780 * - X * * 7 3 3 + 7 6");
           Calculations.CalculateX("93 * * - - 9 8 8 - * 2 - 3 4 4 X");
           Calculations.CalculateX("-1288 * + 1 X - 2 + 2 * * 3 9 6");
           Calculations.CalculateX("-4 + * 2 - 2 3 + X - * 6 - 3 1 * 5 3");
           Calculations.CalculateX("33 + - X + + 1 1 - 9 + 4 * 9 3 6");
           Calculations.CalculateX("199 + - + 8 - 5 X * - - 7 2 * 8 4 5 * 8 7");
           Calculations.CalculateX("-152 * + + - 9 3 3 + 4 * + 4 1 5 - X + 2 9");
           Calculations.CalculateX("-136 * X - - 7 + 8 9 + 6 1");
           Calculations.CalculateX("63 - * 8 - - + 9 + 6 1 2 + 3 3 X");
           Calculations.CalculateX("93 + - 2 * * 7 - 4 6 6 - * 8 2 X");
           Calculations.CalculateX("259 * - - + 3 6 X - 9 * 9 3 + 6 8");
           Calculations.CalculateX("-619 - - * - 5 6 7 * 3 8 * * 7 - * 3 X 6 7");
           Calculations.CalculateX("1232 * * 8 * 7 + - 7 + - + 7 3 7 3 + 9 1 X");
           Calculations.CalculateX("-136 - - X * + 4 3 + + 9 5 6 + 6 4");
           Calculations.CalculateX("19 - + + 5 2 + 9 3 + 5 - X + 2 4");
           Calculations.CalculateX("226 + X * 6 * + 5 + 6 1 3");
           Calculations.CalculateX("1404 * + 9 * * - 4 1 2 * 5 1 * + 5 1 X");
           Calculations.CalculateX("480 * + X 1 * * 4 + - 2 6 - + 3 9 4 6");
           Calculations.CalculateX("-34 - * - 8 + 7 3 X * + 3 - 5 4 7");
           Calculations.CalculateX("-351 + - - 9 2 * 9 * 8 5 - + X - - 8 8 2 4");
           Calculations.CalculateX("558 * - * 8 - + 1 + 4 6 4 - 3 9 X");
           Calculations.CalculateX("-2 - + 5 - * 1 3 4 + - X 7 6");
           Calculations.CalculateX("3 - - - 9 8 6 * * * 1 2 - 2 4 X");
           Calculations.CalculateX("-34 + - X 6 - - 2 * 5 + - 8 4 3 2");
           Calculations.CalculateX("14 + + X 2 - - 6 * 2 4 1");
           Calculations.CalculateX("-37 - - 5 + - 1 8 + 1 8 * + + 5 2 9 X");
           Calculations.CalculateX("65 + - * 8 9 * + X 4 1 1");
           Calculations.CalculateX("177 * + + - + 7 7 4 * 6 X 6 + 2 4");
           Calculations.CalculateX("51 + - + + * 5 7 7 5 - 7 8 X");
           Calculations.CalculateX("14 - + * 5 5 8 - + 4 * 9 X - 9 6");
           Calculations.CalculateX("0 - - + 1 + - + 6 7 7 7 + 6 6 * X - 6 3");
           Calculations.CalculateX("334 - * + * 6 - 5 3 9 + 7 9 X");
           Calculations.CalculateX("203 + + 8 2 - * 9 + 5 + 8 1 * * X 5 - 3 6");
           Calculations.CalculateX("42 + - + * 4 9 * 1 X - 4 * 4 5 - - 2 9 8");
           Calculations.CalculateX("-8 - - + + 3 1 X 3 - + + 3 6 7 2");
           Calculations.CalculateX("2835 * - * X + 6 3 * 9 1 * - 8 3 * 9 7");
           Calculations.CalculateX("14 - - 1 X + 7 - * 5 - + 2 7 5 * 7 7");
           Calculations.CalculateX("-1243 * * 6 + 1 3 * + + 9 9 8 - 8 + - 8 X 3");
           Calculations.CalculateX("11 + - 1 - 2 - 7 3 - X 1");
           Calculations.CalculateX("20 + * - 4 6 5 + X + * 4 4 + 1 7");
           Calculations.CalculateX("34 - + * 3 7 + * 1 3 + - 2 2 + 2 5 * X 3");
           Calculations.CalculateX("17 - + 7 X + - * 2 3 + * 3 5 6 + * 1 1 6");
           Calculations.CalculateX("224 + + 3 X * + 4 2 * 6 6");
           Calculations.CalculateX("-12 - * + - 7 8 3 * 5 - + 2 5 7 * X 3");
           Calculations.CalculateX("-65 - 9 + + * 3 3 * - + 7 1 X + 4 9 * 5 6");
           Calculations.CalculateX("-11087 * * - 8 + * 2 7 * 4 9 X * 3 + 4 * 8 5");
           Calculations.CalculateX("-9 + - 4 - + 9 8 4 - + 2 - 2 6 X");
           Calculations.CalculateX("-5976 * - - 8 2 * 9 * 7 8 + 6 X");
           Calculations.CalculateX("563 + * + + * 3 6 X + 1 2 + 9 * 2 7 2");
           Calculations.CalculateX("-190 - * X 8 * 6 + + + + * 4 7 3 5 - 8 9 6");
           Calculations.CalculateX("-31 - * 2 X * 1 + * 8 5 + 2 4");
           Calculations.CalculateX("7 - - + 5 - * 3 3 4 3 X");
           Calculations.CalculateX("48 * * - 4 3 X * 6 * 1 1");
           Calculations.CalculateX("-165 - * 3 2 - + * 6 * 4 7 X + 3 1");
           Calculations.CalculateX("56 * * 1 + 7 3 - X - 3 7");
           Calculations.CalculateX("582 + - * * * 2 7 4 * 5 - 8 6 X * - 8 4 5");
           Calculations.CalculateX("-60 - * X - 2 8 - * 6 - + + 5 8 8 + 9 4 6");
           Calculations.CalculateX("8 * 1 - + 2 - + 2 5 - 8 8 X");
           Calculations.CalculateX("13 - + + 9 3 + 5 X + 6 5");
           Calculations.CalculateX("-137 + - + - 8 * * 4 4 9 3 5 X");
           Calculations.CalculateX("80 + X * * * 9 - 4 3 - 7 3 2");
           Calculations.CalculateX("614 + * 5 1 * + + 2 - * 4 8 7 2 * X 3");
           Calculations.CalculateX("-564 * + - - 9 6 7 * 2 1 * + * + 1 5 7 5 X");
           Calculations.CalculateX("1 + + 2 - 5 + - 7 1 X 4");
           Calculations.CalculateX("1894 * - * 7 9 9 - + * 9 5 1 + X 9");
           Calculations.CalculateX("155 + * + + 8 3 9 - + 5 7 5 - 9 X");
           Calculations.CalculateX("11 + + X * 1 8 - + + 1 1 1 8");
           Calculations.CalculateX("-32 * 8 * * 2 X - + 2 * - 8 7 6 9");
           Calculations.CalculateX("-74 - - - + X 2 4 + 9 * 3 8 + * 5 7 8");
           Calculations.CalculateX("48 + X * - - 9 3 - 7 9 5");
           Calculations.CalculateX("-26 - - - 5 + * 6 4 1 - 8 X - 7 2");
           Calculations.CalculateX("48 * - 1 9 - X - * 2 8 1");
           Calculations.CalculateX("80 + + - 6 6 2 * + 6 7 + 1 X");
           Calculations.CalculateX("92 * + + + 6 2 * X 8 6 2");
           Calculations.CalculateX("116 - + + * 9 * 9 1 * 7 7 - 2 1 + 3 * X 4");
           Calculations.CalculateX("-1998 * * - 5 6 9 - * * X 3 * 4 - 7 5 - 1 7");
           Calculations.CalculateX("-60 + + - - 4 9 3 - X * 9 7 - 6 3");
        }
    }
}
